994. Rotting Oranges
My Code->

class Solution {
public: 
    vector<vector<int>>directions={{1,0},{0,1},{-1,0},{0,-1}};

    int orangesRotting(vector<vector<int>>& grid) {
        int ans=0;
        int n=grid.size();
        int m=grid[0].size();
        queue<pair<pair<int,int>,int>>q;
       vector<vector<int>>vis(n,vector<int>(m,0));
       for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(grid[i][j]==2){
              q.push({{i,j},0});
              vis[i][j]=2;
            }else{
                vis[i][j]=0;
            }
        }
       }
       int time=0;

       while(!q.empty()){
        int row=q.front().first.first;
        int col=q.front().first.second;
        int currTime=q.front().second;
         time=max(time,currTime);
         q.pop();
        for(auto it: directions){
            int new_i=it[0]+row;
            int new_j=it[1]+col;

            if(new_i>=0 && new_i<n && new_j>=0 && new_j<m && grid[new_i][new_j]==1&& vis[new_i][new_j]==0){
                vis[new_i][new_j]=2;
                q.push({{new_i,new_j},time+1});
            }
        }

       }

        for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
           if(vis[i][j]!=2&&grid[i][j]==1){
            return -1;
           }
        }
       }
        return time;
    }
};
